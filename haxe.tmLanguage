<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist><dict><key>name</key><string>Haxe</string><key>uuid</key><string>67c72f9f-862c-4e48-8951-dcc22c0bb4ea</string><key>scopeName</key><string>source.hx</string><key>fileTypes</key><array><string>hx</string><string>dump</string></array><key>repository</key><dict><key>metadata</key><dict><key>patterns</key><array><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.metadata.hx</string></dict><key>2</key><dict><key>name</key><string>storage.modifier.metadata.hx</string></dict><key>3</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>begin</key><string>(@)(:(abi|abstract|access|allow|analyzer|annotation|arrayAccess|astSource|autoBuild|bind|bitmap|bridgeProperties|build|buildXml|callable|classCode|commutative|compilerGenerated|const|coreApi|coreType|cppFileCode|cppInclude|cppNamespaceCode|dce|debug|decl|delegate|depend|deprecated|eager|enum|event|expose|extern|fakeEnum|file|fileXml|final|fixed|font|forward|forwardStatics|from|functionCode|functionTailCode|generic|genericBuild|getter|hack|headerClassCode|headerCode|headerInclude|headerNamespaceCode|hxGen|ifFeature|include|internal|isVar|javaCanonical|jsRequire|keep|keepInit|keepSub|luaRequire|macro|mergeBlock|meta|multiType|native|nativeChildren|nativeGen|nativeProperty|nativeStaticExtension|noCompletion|noDebug|noDoc|noImportGlobal|noPrivateAccess|noStack|noUsing|nonVirtual|notNull|ns|objc|objcProtocol|op|optional|overload|phpConstants|phpGlobal|privateAccess|property|protected|publicFields|pure|pythonImport|readOnly|remove|require|resolve|rtti|runtime|runtimeValue|scalar|selfCall|setter|sound|sourceFile|stackOnly|strict|struct|structAccess|structInit|suppressWarnings|templatedCall|throws|to|transient|unifyMinDynamic|unreflective|unsafe|value|void|volatile)\b)\s*(\()</string><key>patterns</key><array><dict><key>include</key><string>#block-contents</string></dict></array></dict><dict><key>captures</key><dict><key>2</key><dict><key>name</key><string>punctuation.metadata.hx</string></dict><key>3</key><dict><key>name</key><string>storage.modifier.metadata.hx</string></dict></dict><key>match</key><string>((@)(:(abi|abstract|access|allow|analyzer|annotation|arrayAccess|astSource|autoBuild|bind|bitmap|bridgeProperties|build|buildXml|callable|classCode|commutative|compilerGenerated|const|coreApi|coreType|cppFileCode|cppInclude|cppNamespaceCode|dce|debug|decl|delegate|depend|deprecated|eager|enum|event|expose|extern|fakeEnum|file|fileXml|final|fixed|font|forward|forwardStatics|from|functionCode|functionTailCode|generic|genericBuild|getter|hack|headerClassCode|headerCode|headerInclude|headerNamespaceCode|hxGen|ifFeature|include|internal|isVar|javaCanonical|jsRequire|keep|keepInit|keepSub|luaRequire|macro|mergeBlock|meta|multiType|native|nativeChildren|nativeGen|nativeProperty|nativeStaticExtension|noCompletion|noDebug|noDoc|noImportGlobal|noPrivateAccess|noStack|noUsing|nonVirtual|notNull|ns|objc|objcProtocol|op|optional|overload|phpConstants|phpGlobal|privateAccess|property|protected|publicFields|pure|pythonImport|readOnly|remove|require|resolve|rtti|runtime|runtimeValue|scalar|selfCall|setter|sound|sourceFile|stackOnly|strict|struct|structAccess|structInit|suppressWarnings|templatedCall|throws|to|transient|unifyMinDynamic|unreflective|unsafe|value|void|volatile)\b))</string></dict><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.metadata.hx</string></dict><key>2</key><dict><key>name</key><string>variable.metadata.hx</string></dict><key>3</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>begin</key><string>(@)(:?[a-zA-Z_]*)\s*(\()</string><key>patterns</key><array><dict><key>include</key><string>#block-contents</string></dict></array></dict><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>punctuation.metadata.hx</string></dict><key>2</key><dict><key>name</key><string>variable.metadata.hx</string></dict></dict><key>match</key><string>(@)(:?[a-zA-Z_]*)</string></dict></array></dict><key>comments</key><dict><key>patterns</key><array><dict><key>name</key><string>comment.block.documentation.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>end</key><string>\*/</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>begin</key><string>/\*\*(?!/)</string><key>patterns</key><array><dict><key>include</key><string>#javadoc-tags</string></dict></array></dict><dict><key>name</key><string>comment.block.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>end</key><string>\*/</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>begin</key><string>/\*</string><key>patterns</key><array><dict><key>include</key><string>#javadoc-tags</string></dict></array></dict><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>name</key><string>comment.line.double-slash.hx</string><key>match</key><string>(//).*$\n?</string></dict></array></dict><key>package</key><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>storage.type.package.hx</string></dict><key>2</key><dict><key>name</key><string>support.package.hx</string></dict><key>4</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>name</key><string>meta.package.hx</string><key>match</key><string>\b(package)(\s+([\w.*]*))?\s*(;)?</string></dict><key>jsx-tag-open-in-single-quoted</key><dict><key>name</key><string>tag.open.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.tag.end.hx</string></dict></dict><key>end</key><string>(/?&gt;)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.tag.begin.hx</string></dict><key>2</key><dict><key>name</key><string>entity.name.tag.hx</string></dict></dict><key>begin</key><string>(&lt;)([a-zA-Z0-9\.:$_]+)</string><key>patterns</key><array><dict><key>include</key><string>#jsx-tag-attributes-in-single-quoted</string></dict></array></dict><key>enum</key><dict><key>name</key><string>meta.enum.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>end</key><string>(?&lt;=\})|(;)</string><key>begin</key><string>(?=enum)</string><key>patterns</key><array><dict><key>include</key><string>#enum-name</string></dict><dict><key>include</key><string>#enum-name-post</string></dict><dict><key>include</key><string>#enum-block</string></dict></array></dict><key>method-name</key><dict><key>end</key><string>(?=$|\()</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>storage.type.function.hx</string></dict><key>2</key><dict><key>name</key><string>storage.type.hx</string></dict><key>3</key><dict><key>name</key><string>entity.name.function.hx</string></dict></dict><key>begin</key><string>\b(function)\b\s*\b(?:(new)|([_A-Za-z]\w*))?\b</string><key>patterns</key><array><dict><key>include</key><string>#macro-reification</string></dict><dict><key>include</key><string>#type-parameters</string></dict></array></dict><key>variable-name</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>variable.other.hx</string></dict></dict><key>end</key><string>(?=$)|([_a-zA-Z]\w*)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>storage.type.variable.hx</string></dict></dict><key>begin</key><string>\b(var)\b</string></dict><key>constants</key><dict><key>patterns</key><array><dict><key>name</key><string>constant.language.hx</string><key>match</key><string>\b(true|false|null)\b</string></dict><dict><key>name</key><string>constant.numeric.hex.hx</string><key>match</key><string>\b(0(x|X)[0-9a-fA-F]*)\b</string></dict><dict><key>captures</key><dict><key>0</key><dict><key>name</key><string>constant.numeric.decimal.hx</string></dict><key>1</key><dict><key>name</key><string>meta.delimiter.decimal.period.hx</string></dict><key>2</key><dict><key>name</key><string>meta.delimiter.decimal.period.hx</string></dict><key>3</key><dict><key>name</key><string>meta.delimiter.decimal.period.hx</string></dict><key>4</key><dict><key>name</key><string>meta.delimiter.decimal.period.hx</string></dict><key>5</key><dict><key>name</key><string>meta.delimiter.decimal.period.hx</string></dict><key>6</key><dict><key>name</key><string>meta.delimiter.decimal.period.hx</string></dict></dict><key>match</key><string>(?x)
(?&lt;!\$)(?:
  (?:\b[0-9]+(\.)[0-9]+[eE][+-]?[0-9]+\b)| # 1.1E+3
  (?:\b[0-9]+(\.)[eE][+-]?[0-9]+\b)|       # 1.E+3
  (?:\B(\.)[0-9]+[eE][+-]?[0-9]+\b)|       # .1E+3
  (?:\b[0-9]+[eE][+-]?[0-9]+\b)|           # 1E+3
  (?:\b[0-9]+(\.)[0-9]+\b)|                # 1.1
  (?:\b[0-9]+(\.)(?!\.)\B)|                # 1.
  (?:\B(\.)[0-9]+\b)|                      # .1
  (?:\b[0-9]+\b)                           # 1
)(?!\$)</string></dict></array></dict><key>variable-accessors</key><dict><key>name</key><string>meta.parameters.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.parameters.end.hx</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.parameters.begin.hx</string></dict></dict><key>begin</key><string>\(</string><key>patterns</key><array><dict><key>include</key><string>#keywords-accessor</string></dict><dict><key>include</key><string>#accessor-method</string></dict><dict><key>include</key><string>#punctuation-comma</string></dict></array></dict><key>typedef-name</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>entity.name.type.class.hx</string></dict></dict><key>end</key><string>([_A-Za-z]\w*)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>storage.type.class.hx</string></dict></dict><key>begin</key><string>\b(typedef)\b</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict></array></dict><key>javadoc-tags</key><dict><key>patterns</key><array><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>storage.type.class.javadoc</string></dict><key>2</key><dict><key>name</key><string>variable.other.javadoc</string></dict></dict><key>match</key><string>(@param)\s+([_A-Za-z]\w*)\s+</string></dict><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>storage.type.class.javadoc</string></dict><key>2</key><dict><key>name</key><string>constant.numeric.javadoc</string></dict></dict><key>match</key><string>(@since)\s+([\w\.-]+)\s+</string></dict><dict><key>captures</key><dict><key>0</key><dict><key>name</key><string>storage.type.class.javadoc</string></dict></dict><key>match</key><string>@(param|exception|throws|deprecated|returns?|since|default|see)</string></dict></array></dict><key>class</key><dict><key>name</key><string>meta.class.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>end</key><string>(?&lt;=\})|(;)</string><key>begin</key><string>(?=class)</string><key>patterns</key><array><dict><key>include</key><string>#class-name</string></dict><dict><key>include</key><string>#class-name-post</string></dict><dict><key>include</key><string>#class-block</string></dict></array></dict><key>parameter</key><dict><key>end</key><string>(?=\)|,)</string><key>begin</key><string>(?&lt;=\(|,)</string><key>patterns</key><array><dict><key>include</key><string>#parameter-name</string></dict><dict><key>include</key><string>#parameter-type-hint</string></dict><dict><key>include</key><string>#parameter-assign</string></dict><dict><key>include</key><string>#punctuation-comma</string></dict><dict><key>include</key><string>#global</string></dict></array></dict><key>punctuation-braces</key><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>begin</key><string>\(</string><key>patterns</key><array><dict><key>include</key><string>#keywords</string></dict><dict><key>include</key><string>#method-call</string></dict><dict><key>name</key><string>keyword.other.hx</string><key>match</key><string>\bis\b</string></dict><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict><dict><key>include</key><string>#type-check</string></dict></array></dict><key>punctuation-terminator</key><dict><key>name</key><string>punctuation.terminator.hx</string><key>match</key><string>;</string></dict><key>type</key><dict><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#macro-reification</string></dict><dict><key>include</key><string>#type-name</string></dict><dict><key>include</key><string>#type-parameters</string></dict><dict><key>name</key><string>keyword.operator.type.function.hx</string><key>match</key><string>-&gt;</string></dict><dict><key>end</key><string>(?&lt;=\})</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>begin</key><string>(\{)</string><key>patterns</key><array><dict><key>include</key><string>#typedef-block</string></dict></array></dict></array></dict><key>jsx-tag-invalid</key><dict><key>name</key><string>invalid.illegal.tag.incomplete.hx</string><key>match</key><string>&lt;\s*&gt;</string></dict><key>parameter-type-hint</key><dict><key>end</key><string>(?=\)|,|=)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>keyword.operator.type.annotation.hx</string></dict></dict><key>begin</key><string>:</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict></array></dict><key>parameters</key><dict><key>name</key><string>meta.parameters.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.parameters.end.hx</string></dict></dict><key>end</key><string>\s*(\))</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.parameters.begin.hx</string></dict></dict><key>begin</key><string>\(</string><key>patterns</key><array><dict><key>include</key><string>#parameter</string></dict></array></dict><key>operator-optional</key><dict><key>name</key><string>keyword.operator.optional.hx</string><key>match</key><string>(\?)(?!\s)</string></dict><key>jsx-string-single-quoted</key><dict><key>name</key><string>string.quoted.single.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.end.hx</string></dict></dict><key>end</key><string>'</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.begin.hx</string></dict></dict><key>begin</key><string>'</string><key>patterns</key><array><dict><key>include</key><string>#jsx-entities</string></dict></array></dict><key>keywords-accessor</key><dict><key>name</key><string>storage.type.property.hx</string><key>match</key><string>\b(default|get|set|dynamic|never|null)\b</string></dict><key>modifiers</key><dict><key>name</key><string>storage.modifier.hx</string><key>match</key><string>\b(public|private|static|dynamic|inline|macro|extern|override)\b</string></dict><key>jsx-tag-attributes-in-single-quoted</key><dict><key>patterns</key><array><dict><key>include</key><string>#jsx-tag-attribute-name</string></dict><dict><key>include</key><string>#jsx-string-double-quoted</string></dict><dict><key>include</key><string>#jsx-string-single-quoted-escaped</string></dict><dict><key>include</key><string>#jsx-evaluated-code</string></dict></array></dict><key>variable-name-next</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>variable.other.hx</string></dict></dict><key>end</key><string>([_a-zA-Z]\w*)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.separator.comma.hx</string></dict></dict><key>begin</key><string>,</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict></array></dict><key>variable-name-post</key><dict><key>end</key><string>(?=;)|(?==)</string><key>begin</key><string>(?&lt;=\w)</string><key>patterns</key><array><dict><key>include</key><string>#variable-accessors</string></dict><dict><key>include</key><string>#variable-type-hint</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>identifier-name</key><dict><key>name</key><string>variable.other.hx</string><key>match</key><string>\b([_A-Za-z]\w*)\b</string></dict><key>class-name</key><dict><key>name</key><string>meta.class.identifier.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>entity.name.type.class.hx</string></dict></dict><key>end</key><string>([_A-Za-z]\w*)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>storage.type.class.hx</string></dict></dict><key>begin</key><string>\b(class)\b</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict></array></dict><key>abstract-name</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>entity.name.type.class.hx</string></dict></dict><key>end</key><string>([_A-Za-z]\w*)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>storage.type.class.hx</string></dict></dict><key>begin</key><string>\b(abstract)\b</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict></array></dict><key>jsx-tag-close</key><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.tag.begin.hx</string></dict><key>2</key><dict><key>name</key><string>entity.name.tag.hx</string></dict><key>3</key><dict><key>name</key><string>punctuation.definition.tag.end.hx</string></dict></dict><key>name</key><string>tag.closed.hx</string><key>match</key><string>(&lt;/)([^&gt;]+)(&gt;)</string></dict><key>method-name-post</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict><key>2</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>end</key><string>(\{)|(;)</string><key>begin</key><string>(?&lt;=[\w\s&gt;])</string><key>patterns</key><array><dict><key>include</key><string>#parameters</string></dict><dict><key>include</key><string>#method-return-type-hint</string></dict><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>type-name</key><dict><key>patterns</key><array><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>support.class.builtin.hx</string></dict><key>2</key><dict><key>name</key><string>support.package.hx</string></dict><key>3</key><dict><key>name</key><string>entity.name.type.hx</string></dict></dict><key>match</key><string>\b(Any|Array|ArrayAccess|Bool|Class|Date|DateTools|Dynamic|Enum|EnumValue|EReg|Float|IMap|Int|IntIterator|Iterable|Iterator|Lambda|List|ListIterator|ListNode|Map|Math|Null|Reflect|Std|String|StringBuf|StringTools|Sys|Type|UInt|ValueType|Void|Xml|XmlType)(?:(\.)(_*[A-Z]\w*[a-z]\w*))*\b</string></dict><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>support.package.hx</string></dict><key>3</key><dict><key>name</key><string>entity.name.type.hx</string></dict><key>4</key><dict><key>name</key><string>support.package.hx</string></dict><key>5</key><dict><key>name</key><string>entity.name.type.hx</string></dict></dict><key>match</key><string>\b(?&lt;!\.)((_*[a-z]\w*\.)*)(_*[A-Z]\w*)(?:(\.)(_*[A-Z]\w*[a-z]\w*))*\b</string></dict></array></dict><key>type-parameter-constraint</key><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.constraint.end.hx</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>keyword.operator.type.annotation.hx</string></dict><key>2</key><dict><key>name</key><string>punctuation.definition.constraint.begin.hx</string></dict></dict><key>begin</key><string>(:)\s*(\()</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict><dict><key>include</key><string>#punctuation-comma</string></dict></array></dict><key>regex</key><dict><key>name</key><string>string.regexp.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.string.end.hx</string></dict><key>2</key><dict><key>name</key><string>keyword.other.hx</string></dict></dict><key>end</key><string>(/)([gimsu]*)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.string.begin.hx</string></dict></dict><key>begin</key><string>(~/)</string><key>patterns</key><array><dict><key>include</key><string>#regexp</string></dict></array></dict><key>jsx-entities</key><dict><key>patterns</key><array><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.entity.hx</string></dict><key>3</key><dict><key>name</key><string>punctuation.definition.entity.hx</string></dict></dict><key>name</key><string>constant.character.entity.hx</string><key>match</key><string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string></dict><dict><key>name</key><string>invalid.illegal.bad-ampersand.hx</string><key>match</key><string>&amp;</string></dict></array></dict><key>jsx-string-single-quoted-escaped</key><dict><key>name</key><string>string.quoted.single.haxe</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.escaped.end.hx</string></dict></dict><key>end</key><string>\\'</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.escaped.begin.hx</string></dict></dict><key>begin</key><string>\\'</string><key>patterns</key><array><dict><key>include</key><string>#jsx-entities</string></dict></array></dict><key>parameter-name</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>variable.parameter.hx</string></dict></dict><key>end</key><string>([_a-zA-Z]\w*)</string><key>begin</key><string>(?&lt;=\(|,)</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#metadata</string></dict><dict><key>include</key><string>#operator-optional</string></dict></array></dict><key>typedef-name-post</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>end</key><string>(\{)|(?=;)</string><key>begin</key><string>(?&lt;=\w)</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#punctuation-brackets</string></dict><dict><key>include</key><string>#punctuation-separator</string></dict><dict><key>include</key><string>#operator-assignment</string></dict><dict><key>include</key><string>#type</string></dict></array></dict><key>method-block</key><dict><key>name</key><string>meta.method.block.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.end.hx</string></dict></dict><key>end</key><string>(\})</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>begin</key><string>(?&lt;=\{)</string><key>patterns</key><array><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>interface-name-post</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>end</key><string>([\{;])</string><key>begin</key><string>(?&lt;=\w)</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#modifiers-inheritance</string></dict><dict><key>include</key><string>#type</string></dict></array></dict><key>variable</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>end</key><string>(?=$)|(;)</string><key>begin</key><string>(?=\bvar\b)</string><key>patterns</key><array><dict><key>include</key><string>#variable-name</string></dict><dict><key>include</key><string>#variable-name-next</string></dict><dict><key>include</key><string>#variable-assign</string></dict><dict><key>include</key><string>#variable-name-post</string></dict></array></dict><key>method-return-type-hint</key><dict><key>end</key><string>(?=\{|;|[a-z0-9])</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>keyword.operator.type.annotation.hx</string></dict></dict><key>begin</key><string>(?&lt;=\))\s*(:)</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict></array></dict><key>abstract-name-post</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>end</key><string>([\{;])</string><key>begin</key><string>(?&lt;=\w)</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>name</key><string>keyword.other.hx</string><key>match</key><string>\b(from|to)\b</string></dict><dict><key>include</key><string>#type</string></dict><dict><key>name</key><string>punctuation.definition.other.hx</string><key>match</key><string>[\(\)]</string></dict></array></dict><key>block-contents</key><dict><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#regex</string></dict><dict><key>include</key><string>#array</string></dict><dict><key>include</key><string>#constants</string></dict><dict><key>include</key><string>#strings</string></dict><dict><key>include</key><string>#metadata</string></dict><dict><key>include</key><string>#method</string></dict><dict><key>include</key><string>#arrow-function</string></dict><dict><key>include</key><string>#variable</string></dict><dict><key>include</key><string>#modifiers</string></dict><dict><key>include</key><string>#new-expr</string></dict><dict><key>include</key><string>#for-loop</string></dict><dict><key>include</key><string>#keywords</string></dict><dict><key>include</key><string>#method-call</string></dict><dict><key>include</key><string>#punctuation-braces</string></dict><dict><key>include</key><string>#macro-reification</string></dict><dict><key>include</key><string>#operators</string></dict><dict><key>include</key><string>#operator-assignment</string></dict><dict><key>include</key><string>#punctuation-terminator</string></dict><dict><key>include</key><string>#punctuation-comma</string></dict><dict><key>include</key><string>#identifiers</string></dict></array></dict><key>constant-name</key><dict><key>name</key><string>variable.other.hx</string><key>match</key><string>\b([_A-Z][_A-Z0-9]*)\b</string></dict><key>type-parameters</key><dict><key>name</key><string>meta.type-parameters.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.typeparameters.end.hx</string></dict></dict><key>end</key><string>(?=$)|(&gt;)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.typeparameters.begin.hx</string></dict></dict><key>begin</key><string>(&lt;)</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict><dict><key>include</key><string>#type-parameter-constraint</string></dict><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#array</string></dict><dict><key>include</key><string>#constants</string></dict><dict><key>include</key><string>#strings</string></dict><dict><key>include</key><string>#metadata</string></dict><dict><key>include</key><string>#punctuation-comma</string></dict></array></dict><key>interface-block</key><dict><key>name</key><string>meta.block.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.end.hx</string></dict></dict><key>end</key><string>(\})</string><key>begin</key><string>(?&lt;=\{)</string><key>patterns</key><array><dict><key>include</key><string>#method</string></dict><dict><key>include</key><string>#variable</string></dict><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>class-block</key><dict><key>name</key><string>meta.block.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.end.hx</string></dict></dict><key>end</key><string>(\})</string><key>begin</key><string>(?&lt;=\{)</string><key>patterns</key><array><dict><key>include</key><string>#method</string></dict><dict><key>include</key><string>#modifiers</string></dict><dict><key>include</key><string>#variable</string></dict><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>conditional-compilation-parens</key><dict><key>end</key><string>\)</string><key>begin</key><string>\(</string><key>patterns</key><array><dict><key>include</key><string>#conditional-compilation-parens</string></dict></array></dict><key>interface-name</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>entity.name.type.class.hx</string></dict></dict><key>end</key><string>([_A-Za-z]\w*)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>storage.type.class.hx</string></dict></dict><key>begin</key><string>\b(interface)\b</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict></array></dict><key>typedef</key><dict><key>name</key><string>meta.typedef.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>end</key><string>(?&lt;=\})|(;)</string><key>begin</key><string>(?=typedef)</string><key>patterns</key><array><dict><key>include</key><string>#typedef-name</string></dict><dict><key>include</key><string>#typedef-name-post</string></dict><dict><key>include</key><string>#typedef-block</string></dict></array></dict><key>strings</key><dict><key>patterns</key><array><dict><key>name</key><string>string.quoted.double.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.end.hx</string></dict></dict><key>end</key><string>"</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.begin.hx</string></dict></dict><key>begin</key><string>"</string><key>patterns</key><array><dict><key>name</key><string>constant.character.escape.hx</string><key>match</key><string>\\.</string></dict></array></dict><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>string.quoted.single.hx</string></dict><key>1</key><dict><key>name</key><string>punctuation.definition.string.end.hx</string></dict></dict><key>end</key><string>(')</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>string.quoted.single.hx</string></dict><key>1</key><dict><key>name</key><string>punctuation.definition.string.begin.hx</string></dict></dict><key>begin</key><string>(')</string><key>patterns</key><array><dict><key>name</key><string>string.quoted.single.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>constant.character.escape.hx</string></dict></dict><key>end</key><string>\$</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>constant.character.escape.hx</string></dict></dict><key>begin</key><string>\$(?=\$)</string></dict><dict><key>name</key><string>string.quoted.single.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>constant.character.escape.hx</string></dict></dict><key>end</key><string>.</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>constant.character.escape.hx</string></dict></dict><key>begin</key><string>\\(?=.)</string></dict><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.block.end.hx</string></dict></dict><key>end</key><string>(})</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>begin</key><string>(\${)</string><key>patterns</key><array><dict><key>include</key><string>#block-contents</string></dict></array></dict><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict><key>2</key><dict><key>name</key><string>variable.other.hx</string></dict></dict><key>match</key><string>(\$)([_a-zA-Z]\w*)</string></dict><dict><key>name</key><string>constant.character.escape.hx</string><key>match</key><string></string></dict><dict><key>name</key><string>string.quoted.single.hx</string><key>match</key><string>.</string></dict></array></dict></array></dict><key>jsx-tag-open-in-double-quoted</key><dict><key>name</key><string>tag.open.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.tag.end.hx</string></dict></dict><key>end</key><string>(/?&gt;)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.tag.begin.hx</string></dict><key>2</key><dict><key>name</key><string>entity.name.tag.hx</string></dict></dict><key>begin</key><string>(&lt;)([a-zA-Z0-9\.:$_]+)</string><key>patterns</key><array><dict><key>include</key><string>#jsx-tag-attributes-in-double-quoted</string></dict></array></dict><key>jsx-in-single-quoted</key><dict><key>name</key><string>meta.jsx.hx</string><key>patterns</key><array><dict><key>include</key><string>#jsx-tag-open-in-single-quoted</string></dict><dict><key>include</key><string>#jsx-tag-close</string></dict><dict><key>include</key><string>#jsx-tag-invalid</string></dict><dict><key>include</key><string>#jsx-comments</string></dict></array></dict><key>parameter-assign</key><dict><key>end</key><string>(?=\)|,)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>keyword.operator.assignment.hx</string></dict></dict><key>begin</key><string>=</string><key>patterns</key><array><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>typedef-simple-field-type-hint</key><dict><key>end</key><string>(?=\}|,|;)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>keyword.operator.type.annotation.hx</string></dict></dict><key>begin</key><string>:</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict></array></dict><key>jsx-tag-attribute-name</key><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>entity.other.attribute-name.haxe</string></dict></dict><key>name</key><string>meta.tag.attribute-name.hx</string><key>match</key><string>(?:\$[a-zA-Z0-9\-:]+|\b([a-zA-Z0-9\-:]+))</string></dict><key>keywords</key><dict><key>patterns</key><array><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>2</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>begin</key><string>(?&lt;=trace|$type|if|while|for|super)\s*(\()</string><key>patterns</key><array><dict><key>include</key><string>#block-contents</string></dict></array></dict><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>2</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>begin</key><string>(?&lt;=catch)\s*(\()</string><key>patterns</key><array><dict><key>include</key><string>#block-contents</string></dict><dict><key>include</key><string>#type-check</string></dict></array></dict><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>2</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>begin</key><string>(?&lt;=cast)\s*(\()</string><key>patterns</key><array><dict><key>end</key><string>(?=\))</string><key>begin</key><string>(?=,)</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict></array></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><dict><key>name</key><string>keyword.control.catch-exception.hx</string><key>match</key><string>\b(try|catch|throw)\b</string></dict><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.section.case-statement.hx</string></dict></dict><key>end</key><string>:</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>keyword.control.flow-control.hx</string></dict></dict><key>begin</key><string>\b(case|default)\b</string><key>patterns</key><array><dict><key>include</key><string>#block-contents</string></dict></array></dict><dict><key>name</key><string>keyword.control.flow-control.hx</string><key>match</key><string>\b(if|else|return|do|while|for|break|continue|switch|case|default)\b</string></dict><dict><key>name</key><string>keyword.other.untyped.hx</string><key>match</key><string>\b(cast|untyped)\b</string></dict><dict><key>name</key><string>keyword.other.trace.hx</string><key>match</key><string>\btrace\b</string></dict><dict><key>name</key><string>keyword.other.type.hx</string><key>match</key><string>\$type\b</string></dict><dict><key>name</key><string>keyword.other.untyped-property.hx</string><key>match</key><string>\__(global|this)__\b</string></dict><dict><key>name</key><string>variable.language.hx</string><key>match</key><string>\b(this|super)\b</string></dict><dict><key>name</key><string>keyword.operator.new.hx</string><key>match</key><string>\bnew\b</string></dict><dict><key>name</key><string>storage.type.hx</string><key>match</key><string>\b(abstract|class|enum|interface|typedef)\b</string></dict><dict><key>name</key><string>storage.type.function.arrow.hx</string><key>match</key><string>-&gt;</string></dict><dict><key>include</key><string>#modifiers</string></dict><dict><key>include</key><string>#modifiers-inheritance</string></dict></array></dict><key>class-name-post</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>end</key><string>([\{;])</string><key>begin</key><string>(?&lt;=\w)</string><key>patterns</key><array><dict><key>include</key><string>#modifiers-inheritance</string></dict><dict><key>include</key><string>#type</string></dict></array></dict><key>all</key><dict><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#package</string></dict><dict><key>include</key><string>#import</string></dict><dict><key>include</key><string>#using</string></dict><dict><key>include</key><string>#abstract</string></dict><dict><key>include</key><string>#class</string></dict><dict><key>include</key><string>#enum</string></dict><dict><key>include</key><string>#interface</string></dict><dict><key>include</key><string>#typedef</string></dict><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>jsx</key><dict><key>patterns</key><array><dict><key>name</key><string>meta.jsx.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>end</key><string>(') *\)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>keyword.other.jsx.hx</string></dict><key>2</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>begin</key><string>\b(jsx) *\( *(')</string><key>patterns</key><array><dict><key>name</key><string>constant.character.escape.hx</string><key>match</key><string>\\.</string></dict><dict><key>include</key><string>#jsx-in-single-quoted</string></dict></array></dict><dict><key>name</key><string>meta.jsx.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>end</key><string>(') *\)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>keyword.other.jsx.hx</string></dict><key>2</key><dict><key>name</key><string>punctuation.definition.comment.hx</string></dict></dict><key>begin</key><string>\b(jsx) *\( *(")</string><key>patterns</key><array><dict><key>name</key><string>constant.character.escape.hx</string><key>match</key><string>\\.</string></dict><dict><key>include</key><string>#jsx-in-double-quoted</string></dict></array></dict></array></dict><key>regexp</key><dict><key>patterns</key><array><dict><key>name</key><string>keyword.control.anchor.regexp</string><key>match</key><string>\\[bB]|\^|\$</string></dict><dict><key>name</key><string>keyword.other.back-reference.regexp</string><key>match</key><string>\\[1-9]\d*</string></dict><dict><key>name</key><string>keyword.operator.quantifier.regexp</string><key>match</key><string>[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??</string></dict><dict><key>name</key><string>keyword.operator.or.regexp</string><key>match</key><string>\|</string></dict><dict><key>name</key><string>meta.group.assertion.regexp</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.group.regexp</string></dict></dict><key>end</key><string>(\))</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.group.regexp</string></dict><key>2</key><dict><key>name</key><string>punctuation.definition.group.assertion.regexp</string></dict><key>3</key><dict><key>name</key><string>meta.assertion.look-ahead.regexp</string></dict><key>4</key><dict><key>name</key><string>meta.assertion.negative-look-ahead.regexp</string></dict></dict><key>begin</key><string>(\()((\?=)|(\?!))</string><key>patterns</key><array><dict><key>include</key><string>#regexp</string></dict></array></dict><dict><key>name</key><string>meta.group.regexp</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.group.regexp</string></dict></dict><key>end</key><string>\)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.group.regexp</string></dict><key>1</key><dict><key>name</key><string>punctuation.definition.group.capture.regexp</string></dict></dict><key>begin</key><string>\((\?:)?</string><key>patterns</key><array><dict><key>include</key><string>#regexp</string></dict></array></dict><dict><key>name</key><string>constant.other.character-class.set.regexp</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.character-class.regexp</string></dict></dict><key>end</key><string>(\])</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.character-class.regexp</string></dict><key>2</key><dict><key>name</key><string>keyword.operator.negation.regexp</string></dict></dict><key>begin</key><string>(\[)(\^)?</string><key>patterns</key><array><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>constant.character.numeric.regexp</string></dict><key>2</key><dict><key>name</key><string>constant.character.control.regexp</string></dict><key>3</key><dict><key>name</key><string>constant.character.escape.backslash.regexp</string></dict><key>4</key><dict><key>name</key><string>constant.character.numeric.regexp</string></dict><key>5</key><dict><key>name</key><string>constant.character.control.regexp</string></dict><key>6</key><dict><key>name</key><string>constant.character.escape.backslash.regexp</string></dict></dict><key>name</key><string>constant.other.character-class.range.regexp</string><key>match</key><string>(?:.|(\\(?:[0-7]{3}|x\h\h|u\h\h\h\h))|(\\c[A-Z])|(\\.))\-(?:[^\]\\]|(\\(?:[0-7]{3}|x\h\h|u\h\h\h\h))|(\\c[A-Z])|(\\.))</string></dict><dict><key>include</key><string>#regex-character-class</string></dict></array></dict><dict><key>include</key><string>#regex-character-class</string></dict></array></dict><key>jsx-evaluated-code</key><dict><key>name</key><string>meta.brace.curly.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.brace.curly.start.hx</string></dict></dict><key>end</key><string>}</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.brace.curly.end.hx</string></dict></dict><key>begin</key><string>{</string><key>patterns</key><array><dict><key>include</key><string>$self</string></dict></array></dict><key>arrow-function</key><dict><key>name</key><string>meta.method.arrow.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.parameters.end.hx</string></dict><key>2</key><dict><key>name</key><string>storage.type.function.arrow.hx</string></dict></dict><key>end</key><string>(\))\s*(-&gt;)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.parameters.begin.hx</string></dict></dict><key>begin</key><string>(\()(?=[^(]*?\)\s*-&gt;)</string><key>patterns</key><array><dict><key>include</key><string>#parameter</string></dict></array></dict><key>type-check</key><dict><key>end</key><string>(?=\))</string><key>begin</key><string>(?&lt;!macro)(?=:)</string><key>patterns</key><array><dict><key>include</key><string>#operator-type-hint</string></dict><dict><key>include</key><string>#type</string></dict></array></dict><key>import</key><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>storage.type.import.hx</string></dict><key>2</key><dict><key>name</key><string>support.package.hx</string></dict><key>4</key><dict><key>name</key><string>entity.name.type.hx</string></dict><key>6</key><dict><key>name</key><string>support.package.hx</string></dict><key>7</key><dict><key>name</key><string>support.package.hx</string></dict><key>8</key><dict><key>name</key><string>keyword.other.hx</string></dict><key>9</key><dict><key>name</key><string>entity.name.type.hx</string></dict><key>10</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>match</key><string>(import)\s+(?:((\b_*[a-z]\w*\.?)*)(?:((\b_*[A-Z]\w*\.?)+)|(\*))?(\b_*[a-z]\w*|\*)?(?:\s+(as|in)\s+(\b_*[A-Z]\w*)?)?)?\s*(;)?</string></dict><key>method</key><dict><key>name</key><string>meta.method.hx</string><key>end</key><string>(?&lt;=[\};])</string><key>begin</key><string>(?=\bfunction\b)</string><key>patterns</key><array><dict><key>include</key><string>#macro-reification</string></dict><dict><key>include</key><string>#method-name</string></dict><dict><key>include</key><string>#method-name-post</string></dict><dict><key>include</key><string>#method-block</string></dict></array></dict><key>enum-block</key><dict><key>name</key><string>meta.block.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.end.hx</string></dict></dict><key>end</key><string>(\})</string><key>begin</key><string>(?&lt;=\{)</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#metadata</string></dict><dict><key>include</key><string>#parameters</string></dict><dict><key>include</key><string>#identifiers</string></dict></array></dict><key>jsx-string-double-quoted</key><dict><key>name</key><string>string.quoted.double.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.end.hx</string></dict></dict><key>end</key><string>"</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.begin.hx</string></dict></dict><key>begin</key><string>"</string><key>patterns</key><array><dict><key>include</key><string>#jsx-entities</string></dict></array></dict><key>jsx-tag-attributes-in-double-quoted</key><dict><key>patterns</key><array><dict><key>include</key><string>#jsx-tag-attribute-name</string></dict><dict><key>include</key><string>#jsx-string-single-quoted</string></dict><dict><key>include</key><string>#jsx-string-double-quoted-escaped</string></dict><dict><key>include</key><string>#jsx-evaluated-code</string></dict></array></dict><key>variable-assign</key><dict><key>end</key><string>(?=;|,)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>keyword.operator.assignment.hx</string></dict></dict><key>begin</key><string>=</string><key>patterns</key><array><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>enum-name</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>entity.name.type.class.hx</string></dict></dict><key>end</key><string>([_A-Za-z]\w*)</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>storage.type.class.hx</string></dict></dict><key>begin</key><string>\b(enum)\b</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict></array></dict><key>modifiers-inheritance</key><dict><key>name</key><string>storage.modifier.hx</string><key>match</key><string>\b(implements|extends)\b</string></dict><key>jsx-comments</key><dict><key>captures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.comment.xml</string></dict></dict><key>name</key><string>comment.block.xml</string><key>end</key><string>--%?&gt;</string><key>begin</key><string>&lt;[!%]--</string></dict><key>for-loop</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>meta.brace.bround.hx</string></dict></dict><key>end</key><string>(\))</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>keyword.control.flow-control.hx</string></dict><key>2</key><dict><key>name</key><string>meta.brace.bround.hx</string></dict><key>3</key><dict><key>name</key><string>variable.other.hx</string></dict><key>4</key><dict><key>name</key><string>keyword.other.in.hx</string></dict></dict><key>begin</key><string>\b(for)\b\s*(\()\s*\b([_A-Za-z]\w*)\b\s+(in)</string><key>patterns</key><array><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>identifiers</key><dict><key>patterns</key><array><dict><key>include</key><string>#constant-name</string></dict><dict><key>include</key><string>#type-name</string></dict><dict><key>include</key><string>#identifier-name</string></dict></array></dict><key>enum-name-post</key><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>end</key><string>([\{;])</string><key>begin</key><string>(?&lt;=\w)</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict></array></dict><key>operator-assignment</key><dict><key>name</key><string>keyword.operator.assignment.hx</string><key>match</key><string>(=)</string></dict><key>abstract-block</key><dict><key>name</key><string>meta.block.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.end.hx</string></dict></dict><key>end</key><string>(\})</string><key>begin</key><string>(?&lt;=\{)</string><key>patterns</key><array><dict><key>include</key><string>#method</string></dict><dict><key>include</key><string>#modifiers</string></dict><dict><key>include</key><string>#variable</string></dict><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>variable-type-hint</key><dict><key>end</key><string>(?=$|;|,|=)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>keyword.operator.type.annotation.hx</string></dict></dict><key>begin</key><string>:</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict></array></dict><key>operators</key><dict><key>patterns</key><array><dict><key>name</key><string>keyword.operator.logical.hx</string><key>match</key><string>(&amp;&amp;|\|\|)</string></dict><dict><key>name</key><string>keyword.operator.bitwise.hx</string><key>match</key><string>(~|&amp;|\||\^|&gt;&gt;&gt;|&lt;&lt;|&gt;&gt;)</string></dict><dict><key>name</key><string>keyword.operator.comparison.hx</string><key>match</key><string>(==|!=|&lt;=|&gt;=|&lt;|&gt;)</string></dict><dict><key>name</key><string>keyword.operator.logical.hx</string><key>match</key><string>(!)</string></dict><dict><key>name</key><string>keyword.operator.increment-decrement.hx</string><key>match</key><string>(\-\-|\+\+)</string></dict><dict><key>name</key><string>keyword.operator.arithmetic.hx</string><key>match</key><string>(\-|\+|\*|\/|%)</string></dict><dict><key>name</key><string>keyword.operator.intiterator.hx</string><key>match</key><string>\.\.\.</string></dict><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>keyword.operator.ternary.hx</string></dict></dict><key>end</key><string>:</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>keyword.operator.ternary.hx</string></dict></dict><key>begin</key><string>\?</string><key>patterns</key><array><dict><key>include</key><string>#block-contents</string></dict></array></dict></array></dict><key>operator-type-hint</key><dict><key>name</key><string>keyword.operator.type.annotation.hx</string><key>match</key><string>(:)</string></dict><key>array</key><dict><key>name</key><string>meta.array.literal.hx</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.array.end.hx</string></dict></dict><key>end</key><string>\]</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.array.begin.hx</string></dict></dict><key>begin</key><string>\[</string><key>patterns</key><array><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>global</key><dict><key>patterns</key><array><dict><key>include</key><string>#comments</string></dict><dict><key>include</key><string>#conditional-compilation</string></dict></array></dict><key>abstract</key><dict><key>name</key><string>meta.abstract.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>end</key><string>(?&lt;=\})|(;)</string><key>begin</key><string>(?=abstract)</string><key>patterns</key><array><dict><key>include</key><string>#abstract-name</string></dict><dict><key>include</key><string>#abstract-name-post</string></dict><dict><key>include</key><string>#abstract-block</string></dict></array></dict><key>typedef-block</key><dict><key>name</key><string>meta.block.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.block.end.hx</string></dict></dict><key>end</key><string>(\})</string><key>begin</key><string>(?&lt;=\{)</string><key>patterns</key><array><dict><key>include</key><string>#global</string></dict><dict><key>include</key><string>#metadata</string></dict><dict><key>include</key><string>#method</string></dict><dict><key>include</key><string>#variable</string></dict><dict><key>include</key><string>#modifiers</string></dict><dict><key>include</key><string>#punctuation-comma</string></dict><dict><key>include</key><string>#operator-optional</string></dict><dict><key>include</key><string>#typedef-extension</string></dict><dict><key>include</key><string>#typedef-simple-field-type-hint</string></dict><dict><key>include</key><string>#identifier-name</string></dict><dict><key>include</key><string>#strings</string></dict></array></dict><key>using</key><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>storage.type.using.hx</string></dict><key>2</key><dict><key>name</key><string>support.package.hx</string></dict><key>3</key><dict><key>name</key><string>entity.name.type.hx</string></dict><key>4</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>match</key><string>(using)\s+((?:_*[a-z]\w*\.?)*)((?:_*[A-Z]\w*\.?)+)?(;)?</string></dict><key>jsx-string-double-quoted-escaped</key><dict><key>name</key><string>string.quoted.double.haxe</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.escaped.end.hx</string></dict></dict><key>end</key><string>\\"</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.string.escaped.begin.hx</string></dict></dict><key>begin</key><string>\\"</string><key>patterns</key><array><dict><key>include</key><string>#jsx-entities</string></dict></array></dict><key>macro-reification</key><dict><key>patterns</key><array><dict><key>captures</key><dict><key>1</key><dict><key>name</key><string>punctuation.definition.reification.hx</string></dict><key>2</key><dict><key>name</key><string>keyword.reification.hx</string></dict></dict><key>match</key><string>(\$)([eabipv])\{</string></dict><dict><key>captures</key><dict><key>2</key><dict><key>name</key><string>punctuation.definition.reification.hx</string></dict><key>3</key><dict><key>name</key><string>variable.reification.hx</string></dict></dict><key>match</key><string>((\$)([a-zA-Z.]*))</string></dict></array></dict><key>typedef-extension</key><dict><key>end</key><string>,</string><key>begin</key><string>&gt;</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict></array></dict><key>accessor-method</key><dict><key>patterns</key><array><dict><key>name</key><string>entity.name.function.hx</string><key>match</key><string>\b(get|set)_[_A-Za-z]\w*\b</string></dict></array></dict><key>jsx-in-double-quoted</key><dict><key>name</key><string>meta.jsx.hx</string><key>patterns</key><array><dict><key>include</key><string>#jsx-tag-open-in-double-quoted</string></dict><dict><key>include</key><string>#jsx-tag-close</string></dict><dict><key>include</key><string>#jsx-tag-invalid</string></dict><dict><key>include</key><string>#jsx-comments</string></dict></array></dict><key>block</key><dict><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.block.end.hx</string></dict></dict><key>end</key><string>\}</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.block.begin.hx</string></dict></dict><key>begin</key><string>\{</string><key>patterns</key><array><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict><key>punctuation-comma</key><dict><key>name</key><string>punctuation.separator.comma.hx</string><key>match</key><string>,</string></dict><key>conditional-compilation</key><dict><key>patterns</key><array><dict><key>captures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.tag</string></dict></dict><key>match</key><string>((#(if|elseif))[\s!]+([a-zA-Z0-9_]+)(?=\s|/*|//))</string></dict><dict><key>name</key><string>punctuation.definition.tag</string><key>endCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.tag</string></dict></dict><key>end</key><string>(?&lt;=\)|\n)</string><key>beginCaptures</key><dict><key>0</key><dict><key>name</key><string>punctuation.definition.tag</string></dict></dict><key>begin</key><string>((#(if|elseif))[\s!]*)(?=\()</string><key>patterns</key><array><dict><key>include</key><string>#conditional-compilation-parens</string></dict></array></dict><dict><key>name</key><string>punctuation.definition.tag</string><key>match</key><string>(#(end|else|error|line))</string></dict><dict><key>name</key><string>punctuation.definition.tag</string><key>match</key><string>(#([a-zA-Z0-9_]*))\s</string></dict></array></dict><key>interface</key><dict><key>name</key><string>meta.interface.hx</string><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>punctuation.terminator.hx</string></dict></dict><key>end</key><string>(?&lt;=\})|(;)</string><key>begin</key><string>(?=interface)</string><key>patterns</key><array><dict><key>include</key><string>#interface-name</string></dict><dict><key>include</key><string>#interface-name-post</string></dict><dict><key>include</key><string>#interface-block</string></dict></array></dict><key>method-call</key><dict><key>patterns</key><array><dict><key>include</key><string>#jsx</string></dict><dict><key>endCaptures</key><dict><key>1</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>end</key><string>(\))</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>keyword.other.untyped-function.hx</string></dict><key>2</key><dict><key>name</key><string>entity.name.function.hx</string></dict><key>3</key><dict><key>name</key><string>meta.brace.round.hx</string></dict></dict><key>begin</key><string>\b(?:(__(?:addressOf|as|call|checked|cpp|cs|define_feature|delete|feature|field|fixed|foreach|forin|has_next|hkeys|in|int|is|java|js|keys|lock|lua|lua_table|new|php|physeq|prefix|ptr|resources|rethrow|set|setfield|sizeof|type|typeof|unprotect|unsafe|valueOf|var|vector|vmem_get|vmem_set|vmem_sign|instanceof|strict_eq|strict_neq)__)|([_a-z]\w*))\s*(\()</string><key>patterns</key><array><dict><key>include</key><string>#block</string></dict><dict><key>include</key><string>#block-contents</string></dict></array></dict></array></dict><key>new-expr</key><dict><key>name</key><string>new.expr.hx</string><key>end</key><string>(?=$|\()</string><key>beginCaptures</key><dict><key>1</key><dict><key>name</key><string>keyword.operator.new.hx</string></dict></dict><key>begin</key><string>(?&lt;!\.)\b(new)\b</string><key>patterns</key><array><dict><key>include</key><string>#type</string></dict></array></dict><key>regex-character-class</key><dict><key>patterns</key><array><dict><key>name</key><string>constant.other.character-class.regexp</string><key>match</key><string>\\[wWsSdDtrnvf]|\.</string></dict><dict><key>name</key><string>constant.character.numeric.regexp</string><key>match</key><string>\\([0-7]{3}|x\h\h|u\h\h\h\h)</string></dict><dict><key>name</key><string>constant.character.control.regexp</string><key>match</key><string>\\c[A-Z]</string></dict><dict><key>name</key><string>constant.character.escape.backslash.regexp</string><key>match</key><string>\\.</string></dict></array></dict></dict><key>patterns</key><array><dict><key>include</key><string>#all</string></dict></array></dict></plist>